using System;

namespace SudokuSharp
{
	public class Location
	{
		public Location(int idx)
		{
			Index = idx;
		}
		public static explicit operator Location(int index)
		{
			return new Location(index);
		}
		public Location(int Column, int Row)
		{
			Index = ListOfIndices[Column, Row];
		}

		public int Row { get { return ListOfRows[Index]; } }
		public int Column { get { return ListOfColumns[Index]; } }
		public int Zone { get { return ListOfZones[Index]; } }
		public int Index { get; private set; }
		public bool IsSameRow(Location l) { return Row == l.Row; }
		public bool IsSameColumn(Location l) { return Column == l.Column; }
		public bool IsSameZone(Location l) { return Zone == l.Zone; }
		public bool IsBlockedBy(Location l) { return (IsSameRow(l) || IsSameColumn(l) || IsSameZone(l)); }

		public int[] GetRowIndices()
		{
			int[] result = new int[9];
			int start = Index - (Index % 9);

			for (int i = 0; i < 9; i++)
				result[i] = start + i;

			return result;
		}
		public int[] GetColumnIndices()
		{
			int[] result = new int[9];
			int start = Column;

			for (int i = 0; i < 9; i++)
				result[i] = start + i * 9;

			return result;
		}
		public int[] GetZoneIndices()
		{
			int[] result = new int[9];

			for (int i = 0; i < 3; i++)
			{
				result[i] = ZoneIndices[Zone] + i;
				result[i + 3] = ZoneIndices[Zone] + 9 + i;
				result[i + 6] = ZoneIndices[Zone] + 18 + i;
			}

			return result;
		}
		public int[] GetConflictingIndices()
		{
			int[] result = new int[20];
			Array.Copy(ConflictingIndices[Index], result, 20);
			return result;
		}


		private static int[] ListOfRows =
        {
                0,0,0,0,0,0,0,0,0,
                1,1,1,1,1,1,1,1,1,
                2,2,2,2,2,2,2,2,2,
                3,3,3,3,3,3,3,3,3,
                4,4,4,4,4,4,4,4,4,
                5,5,5,5,5,5,5,5,5,
                6,6,6,6,6,6,6,6,6,
                7,7,7,7,7,7,7,7,7,
                8,8,8,8,8,8,8,8,8
        };
		private static int[] ListOfColumns =
        {
            0,1,2,3,4,5,6,7,8,
            0,1,2,3,4,5,6,7,8,
            0,1,2,3,4,5,6,7,8,
            0,1,2,3,4,5,6,7,8,
            0,1,2,3,4,5,6,7,8,
            0,1,2,3,4,5,6,7,8,
            0,1,2,3,4,5,6,7,8,
            0,1,2,3,4,5,6,7,8,
            0,1,2,3,4,5,6,7,8
        };
		private static int[] ListOfZones =
        {
            0,0,0,1,1,1,2,2,2,
            0,0,0,1,1,1,2,2,2,
            0,0,0,1,1,1,2,2,2,
            3,3,3,4,4,4,5,5,5,
            3,3,3,4,4,4,5,5,5,
            3,3,3,4,4,4,5,5,5,
            6,6,6,7,7,7,8,8,8,
            6,6,6,7,7,7,8,8,8,
            6,6,6,7,7,7,8,8,8
        };
		private static int[,] ListOfIndices =
        {
            { 0, 1, 2, 3, 4, 5, 6, 7, 8 },
            { 9,10,11,12,13,14,15,16,17 },
            {18,19,20,21,22,23,24,25,26 },
            {27,28,29,30,31,32,33,34,35 },
            {36,37,38,39,40,41,42,43,44 },
            {45,46,47,48,49,50,51,52,53 },
            {54,55,56,57,58,59,60,61,62 },
            {63,64,65,66,67,68,69,70,71 },
            {72,73,74,75,76,77,78,79,80 }
        };
		private static int[] ZoneIndices = { 0, 3, 6, 27, 30, 33, 54, 57, 60 };

		private static int[][] ConflictingIndices = new int[][] {
	new int[] {1,2,3,4,5,6,7,8,9,10,11,18,19,20,27,36,45,54,63,72},
	new int[] {0,2,3,4,5,6,7,8,9,10,11,18,19,20,28,37,46,55,64,73},
	new int[] {0,1,3,4,5,6,7,8,9,10,11,18,19,20,29,38,47,56,65,74},
	new int[] {0,1,2,4,5,6,7,8,12,13,14,21,22,23,30,39,48,57,66,75},
	new int[] {0,1,2,3,5,6,7,8,12,13,14,21,22,23,31,40,49,58,67,76},
	new int[] {0,1,2,3,4,6,7,8,12,13,14,21,22,23,32,41,50,59,68,77},
	new int[] {0,1,2,3,4,5,7,8,15,16,17,24,25,26,33,42,51,60,69,78},
	new int[] {0,1,2,3,4,5,6,8,15,16,17,24,25,26,34,43,52,61,70,79},
	new int[] {0,1,2,3,4,5,6,7,15,16,17,24,25,26,35,44,53,62,71,80},
	new int[] {0,1,2,10,11,12,13,14,15,16,17,18,19,20,27,36,45,54,63,72},
	new int[] {0,1,2,9,11,12,13,14,15,16,17,18,19,20,28,37,46,55,64,73},
	new int[] {0,1,2,9,10,12,13,14,15,16,17,18,19,20,29,38,47,56,65,74},
	new int[] {3,4,5,9,10,11,13,14,15,16,17,21,22,23,30,39,48,57,66,75},
	new int[] {3,4,5,9,10,11,12,14,15,16,17,21,22,23,31,40,49,58,67,76},
	new int[] {3,4,5,9,10,11,12,13,15,16,17,21,22,23,32,41,50,59,68,77},
	new int[] {6,7,8,9,10,11,12,13,14,16,17,24,25,26,33,42,51,60,69,78},
	new int[] {6,7,8,9,10,11,12,13,14,15,17,24,25,26,34,43,52,61,70,79},
	new int[] {6,7,8,9,10,11,12,13,14,15,16,24,25,26,35,44,53,62,71,80},
	new int[] {0,1,2,9,10,11,19,20,21,22,23,24,25,26,27,36,45,54,63,72},
	new int[] {0,1,2,9,10,11,18,20,21,22,23,24,25,26,28,37,46,55,64,73},
	new int[] {0,1,2,9,10,11,18,19,21,22,23,24,25,26,29,38,47,56,65,74},
	new int[] {3,4,5,12,13,14,18,19,20,22,23,24,25,26,30,39,48,57,66,75},
	new int[] {3,4,5,12,13,14,18,19,20,21,23,24,25,26,31,40,49,58,67,76},
	new int[] {3,4,5,12,13,14,18,19,20,21,22,24,25,26,32,41,50,59,68,77},
	new int[] {6,7,8,15,16,17,18,19,20,21,22,23,25,26,33,42,51,60,69,78},
	new int[] {6,7,8,15,16,17,18,19,20,21,22,23,24,26,34,43,52,61,70,79},
	new int[] {6,7,8,15,16,17,18,19,20,21,22,23,24,25,35,44,53,62,71,80},
	new int[] {0,9,18,28,29,30,31,32,33,34,35,36,37,38,45,46,47,54,63,72},
	new int[] {1,10,19,27,29,30,31,32,33,34,35,36,37,38,45,46,47,55,64,73},
	new int[] {2,11,20,27,28,30,31,32,33,34,35,36,37,38,45,46,47,56,65,74},
	new int[] {3,12,21,27,28,29,31,32,33,34,35,39,40,41,48,49,50,57,66,75},
	new int[] {4,13,22,27,28,29,30,32,33,34,35,39,40,41,48,49,50,58,67,76},
	new int[] {5,14,23,27,28,29,30,31,33,34,35,39,40,41,48,49,50,59,68,77},
	new int[] {6,15,24,27,28,29,30,31,32,34,35,42,43,44,51,52,53,60,69,78},
	new int[] {7,16,25,27,28,29,30,31,32,33,35,42,43,44,51,52,53,61,70,79},
	new int[] {8,17,26,27,28,29,30,31,32,33,34,42,43,44,51,52,53,62,71,80},
	new int[] {0,9,18,27,28,29,37,38,39,40,41,42,43,44,45,46,47,54,63,72},
	new int[] {1,10,19,27,28,29,36,38,39,40,41,42,43,44,45,46,47,55,64,73},
	new int[] {2,11,20,27,28,29,36,37,39,40,41,42,43,44,45,46,47,56,65,74},
	new int[] {3,12,21,30,31,32,36,37,38,40,41,42,43,44,48,49,50,57,66,75},
	new int[] {4,13,22,30,31,32,36,37,38,39,41,42,43,44,48,49,50,58,67,76},
	new int[] {5,14,23,30,31,32,36,37,38,39,40,42,43,44,48,49,50,59,68,77},
	new int[] {6,15,24,33,34,35,36,37,38,39,40,41,43,44,51,52,53,60,69,78},
	new int[] {7,16,25,33,34,35,36,37,38,39,40,41,42,44,51,52,53,61,70,79},
	new int[] {8,17,26,33,34,35,36,37,38,39,40,41,42,43,51,52,53,62,71,80},
	new int[] {0,9,18,27,28,29,36,37,38,46,47,48,49,50,51,52,53,54,63,72},
	new int[] {1,10,19,27,28,29,36,37,38,45,47,48,49,50,51,52,53,55,64,73},
	new int[] {2,11,20,27,28,29,36,37,38,45,46,48,49,50,51,52,53,56,65,74},
	new int[] {3,12,21,30,31,32,39,40,41,45,46,47,49,50,51,52,53,57,66,75},
	new int[] {4,13,22,30,31,32,39,40,41,45,46,47,48,50,51,52,53,58,67,76},
	new int[] {5,14,23,30,31,32,39,40,41,45,46,47,48,49,51,52,53,59,68,77},
	new int[] {6,15,24,33,34,35,42,43,44,45,46,47,48,49,50,52,53,60,69,78},
	new int[] {7,16,25,33,34,35,42,43,44,45,46,47,48,49,50,51,53,61,70,79},
	new int[] {8,17,26,33,34,35,42,43,44,45,46,47,48,49,50,51,52,62,71,80},
	new int[] {0,9,18,27,36,45,55,56,57,58,59,60,61,62,63,64,65,72,73,74},
	new int[] {1,10,19,28,37,46,54,56,57,58,59,60,61,62,63,64,65,72,73,74},
	new int[] {2,11,20,29,38,47,54,55,57,58,59,60,61,62,63,64,65,72,73,74},
	new int[] {3,12,21,30,39,48,54,55,56,58,59,60,61,62,66,67,68,75,76,77},
	new int[] {4,13,22,31,40,49,54,55,56,57,59,60,61,62,66,67,68,75,76,77},
	new int[] {5,14,23,32,41,50,54,55,56,57,58,60,61,62,66,67,68,75,76,77},
	new int[] {6,15,24,33,42,51,54,55,56,57,58,59,61,62,69,70,71,78,79,80},
	new int[] {7,16,25,34,43,52,54,55,56,57,58,59,60,62,69,70,71,78,79,80},
	new int[] {8,17,26,35,44,53,54,55,56,57,58,59,60,61,69,70,71,78,79,80},
	new int[] {0,9,18,27,36,45,54,55,56,64,65,66,67,68,69,70,71,72,73,74},
	new int[] {1,10,19,28,37,46,54,55,56,63,65,66,67,68,69,70,71,72,73,74},
	new int[] {2,11,20,29,38,47,54,55,56,63,64,66,67,68,69,70,71,72,73,74},
	new int[] {3,12,21,30,39,48,57,58,59,63,64,65,67,68,69,70,71,75,76,77},
	new int[] {4,13,22,31,40,49,57,58,59,63,64,65,66,68,69,70,71,75,76,77},
	new int[] {5,14,23,32,41,50,57,58,59,63,64,65,66,67,69,70,71,75,76,77},
	new int[] {6,15,24,33,42,51,60,61,62,63,64,65,66,67,68,70,71,78,79,80},
	new int[] {7,16,25,34,43,52,60,61,62,63,64,65,66,67,68,69,71,78,79,80},
	new int[] {8,17,26,35,44,53,60,61,62,63,64,65,66,67,68,69,70,78,79,80},
	new int[] {0,9,18,27,36,45,54,55,56,63,64,65,73,74,75,76,77,78,79,80},
	new int[] {1,10,19,28,37,46,54,55,56,63,64,65,72,74,75,76,77,78,79,80},
	new int[] {2,11,20,29,38,47,54,55,56,63,64,65,72,73,75,76,77,78,79,80},
	new int[] {3,12,21,30,39,48,57,58,59,66,67,68,72,73,74,76,77,78,79,80},
	new int[] {4,13,22,31,40,49,57,58,59,66,67,68,72,73,74,75,77,78,79,80},
	new int[] {5,14,23,32,41,50,57,58,59,66,67,68,72,73,74,75,76,78,79,80},
	new int[] {6,15,24,33,42,51,60,61,62,69,70,71,72,73,74,75,76,77,79,80},
	new int[] {7,16,25,34,43,52,60,61,62,69,70,71,72,73,74,75,76,77,78,80},
	new int[] {8,17,26,35,44,53,60,61,62,69,70,71,72,73,74,75,76,77,78,79}};
	}
}
